{
  "hash": "7fb2a401796d6ff0e595883e7598f458",
  "result": {
    "markdown": "# Simulations - Generating Random Numbers\n\n## Simulations\n\n-   Simulations play a crucial role in statistical analysis and modeling.\n-   R provides various functions to generate random numbers and conduct simulations.\n\n## Generating Random Numbers\n\n-   runif(): Generates random numbers from a uniform distribution.\n-   Syntax: runif(n, min = 0, max = 1)\n-   n: Number of random numbers to generate.\n-   min: Minimum value of the range.\n-   max: Maximum value of the range.\n\n\n::: {.cell hash='06-simulations_cache/html/unnamed-chunk-1_3d808353dc72670606792a09c8298012'}\n\n```{.r .cell-code}\n# Generate 5 random numbers between 0 and 1\nrandom_numbers <- runif(5)\n```\n:::\n\n\n## Generating Random Integers\n\n-   sample(): Generates random integers from a specified range.\n-   Syntax: sample(x, size, replace = FALSE)\n-   x: A vector of values from which to sample.\n-   size: Number of random integers to generate.\n-   replace: Whether sampling should be done with replacement.\n\n\n::: {.cell hash='06-simulations_cache/html/unnamed-chunk-2_e832ce0418de30e97ec9646edf4a995b'}\n\n```{.r .cell-code}\n# Generate 3 random integers from 1 to 10\nrandom_integers <- sample(1:10, 3)\n```\n:::\n\n\n## Generating Random Samples from a Vector\n\n-   sample(): Generates random samples from a vector.\n-   Syntax: sample(x, size, replace = FALSE)\n-   x: A vector of values from which to sample.\n-   size: Number of random samples to generate.\n-   replace: Whether sampling should be done with replacement.\n\n\n::: {.cell hash='06-simulations_cache/html/unnamed-chunk-3_1f71e7b84b15db30d73ac26f864d6b89'}\n\n```{.r .cell-code}\n# Generate a random sample of 4 elements from a vector\nvector <- c(\"A\", \"B\", \"C\", \"D\", \"E\")\nrandom_sample <- sample(vector, 4)\n```\n:::\n\n\n## Generating Random Numbers from Distributions\n\n-   R provides functions to generate random numbers from various probability distributions:\n    -   rnorm(): Generates random numbers from a normal distribution.\n    -   rexp(): Generates random numbers from an exponential distribution.\n    -   rgamma(): Generates random numbers from a gamma distribution.\n    -   rbinom(): Generates random numbers from a binomial distribution.\n    -   rpois(): Generates random numbers from a Poisson distribution.\n\n\n::: {.cell hash='06-simulations_cache/html/unnamed-chunk-4_b247b916db6881f0d7364ba62973b400'}\n\n```{.r .cell-code}\n# Generate 5 random numbers from a normal distribution with mean 0 and standard deviation 1\nrandom_numbers <- rnorm(5, mean = 0, sd = 1)\n```\n:::\n\n\n## Seeding Random Number Generation\n\n-   To reproduce random results, set a seed value using set.seed().\n-   Syntax: set.seed(seed)\n-   seed: A numeric value to initialize the random number generator.\n\n\n::: {.cell hash='06-simulations_cache/html/unnamed-chunk-5_5cb4ec59dcf91a2523b76e5e4f94f30b'}\n\n```{.r .cell-code}\n# Set a seed value for reproducibility\nset.seed(123)\n```\n:::\n\n\n# Questions?\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}